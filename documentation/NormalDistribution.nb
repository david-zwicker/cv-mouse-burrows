(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     88046,       1783]
NotebookOptionsPosition[     85859,       1704]
NotebookOutlinePosition[     86211,       1720]
CellTagsIndexPosition[     86168,       1717]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"$Assumptions", "=", 
   RowBox[{
    RowBox[{"var", ">", "0"}], "&&", 
    RowBox[{"var1", ">", "0"}], "&&", 
    RowBox[{"var2", ">", "0"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.623685260514694*^9, 3.623685269794074*^9}, {
  3.623753492174996*^9, 3.623753496385552*^9}, {3.6237547167712*^9, 
  3.62375471796167*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"KullbackLeibler", "[", 
    RowBox[{"\[Mu]1_", ",", "var1_", ",", "\[Mu]2_", ",", "var2_"}], "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{"var2", "/", "var1"}], "]"}], "/", "2"}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"var1", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"\[Mu]1", "-", "\[Mu]2"}], ")"}], "^", "2"}]}], ")"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "*", "var2"}], ")"}]}], "-", 
    RowBox[{"1", "/", "2"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.623684749114489*^9, 3.62368480419452*^9}, {
  3.623684899816634*^9, 3.623684900143396*^9}, {3.623685113280863*^9, 
  3.623685115905328*^9}, {3.6236851566506863`*^9, 3.62368516175362*^9}, {
  3.623753471748317*^9, 3.623753487335099*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Bhattacharyya", "[", 
   RowBox[{"\[Mu]1_", ",", "var1_", ",", "\[Mu]2_", ",", "var2_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"var1", "/", "var2"}], "+", 
         RowBox[{"var2", "/", "var1"}], "+", "2"}], ")"}], "/", "4"}], "]"}], 
     "\[IndentingNewLine]", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"\[Mu]1", "-", "\[Mu]2"}], ")"}], "^", "2"}], "/", 
        RowBox[{"(", 
         RowBox[{"var1", "+", "var2"}], ")"}]}], ")"}], "/", "4"}]}], 
    "\[IndentingNewLine]", ")"}], "/", "4"}]}]], "Input",
 CellChangeTimes->{{3.623753528115089*^9, 3.623753596921135*^9}, {
  3.623753655026301*^9, 3.6237536593123407`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Hellinger", "[", 
   RowBox[{"\[Mu]1_", ",", "var1_", ",", "\[Mu]2_", ",", "var2_"}], "]"}], ":=", 
  RowBox[{"Sqrt", "[", 
   RowBox[{"1", "-", 
    RowBox[{"Exp", "[", 
     RowBox[{"-", 
      RowBox[{"Bhattacharyya", "[", 
       RowBox[{"\[Mu]1", ",", "var1", ",", "\[Mu]2", ",", "var2"}], "]"}]}], 
     "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6237539143655853`*^9, 3.623753935054681*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Overlap", "[", 
   RowBox[{"\[Mu]1_", ",", "\[Mu]2_", ",", "var_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"std", "=", 
      RowBox[{"Sqrt", "[", "var", "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
    
    RowBox[{"2", "*", 
     RowBox[{"CDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", "]"}], ",", 
       RowBox[{
        RowBox[{"-", "0.5"}], "*", 
        RowBox[{
         RowBox[{"Abs", "[", 
          RowBox[{"\[Mu]1", "-", "\[Mu]2"}], "]"}], "/", "std"}]}]}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.623768466145074*^9, 3.623768571619884*^9}}],

Cell[CellGroupData[{

Cell["Test special values", "Section",
 CellChangeTimes->{{3.62375509172323*^9, 3.623755096246294*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KullbackLeibler", "[", 
  RowBox[{"\[Mu]", ",", "var", ",", "\[Mu]", ",", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Bhattacharyya", "[", 
  RowBox[{"\[Mu]", ",", "var", ",", "\[Mu]", ",", "var"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Hellinger", "[", 
  RowBox[{"\[Mu]", ",", "var", ",", "\[Mu]", ",", "var"}], "]"}]}], "Input",
 CellChangeTimes->{{3.623755099027399*^9, 3.623755119721691*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.623755120215897*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.623755120219652*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.6237551202222*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"KullbackLeibler", "[", 
    RowBox[{"0", ",", "1", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Bhattacharyya", "[", 
    RowBox[{"0", ",", "1", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"Hellinger", "[", 
    RowBox[{"0", ",", "1", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"x", "\[Rule]", "\[Infinity]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.623755099027399*^9, 3.623755119721691*^9}, {
  3.62375523323708*^9, 3.623755266933887*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.623755120215897*^9}, {
  3.623755236621758*^9, 3.623755267334569*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.623755120215897*^9}, {
  3.623755236621758*^9, 3.62375526733847*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.623755106335428*^9, 3.623755120215897*^9}, {
  3.623755236621758*^9, 3.623755267342852*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Plot values", "Section",
 CellChangeTimes->{{3.62375507941278*^9, 3.6237550902132072`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"KullbackLeibler", "[", 
       RowBox[{"0", ",", "1", ",", "x", ",", "2"}], "]"}], "/", "16"}], ",", 
     RowBox[{"Bhattacharyya", "[", 
      RowBox[{"0", ",", "1", ",", "x", ",", "2"}], "]"}], ",", 
     RowBox[{"Hellinger", "[", 
      RowBox[{"0", ",", "1", ",", "x", ",", "2"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Expressions\>\"", ",", "Below"}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.623684805490082*^9, 3.62368481917445*^9}, 
   3.623753503362032*^9, {3.62375362587269*^9, 3.623753650744227*^9}, {
   3.623753710372696*^9, 3.623753737416945*^9}, {3.6237539461840982`*^9, 
   3.623753964731016*^9}, {3.62375400100519*^9, 3.623754003958118*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
fwtPuCV/p4U1ngb/tw8h/P8+5H8AK7uRqQ==
        "]]}, {
       Directive[
        Opacity[1.], 
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       LineBox[CompressedData["
1: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
P/63v8T/11/+H+bZbqA=
        "]]}}}, {
    DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
     PlotRange -> {{-5, 5}, {0., 0.6505468198734632}}, PlotRangeClipping -> 
     True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{
       RowBox[{
         FractionBox["1", "16"], " ", 
         RowBox[{"KullbackLeibler", "(", 
           RowBox[{"0", ",", "1", ",", "x", ",", "2"}], ")"}]}], 
       RowBox[{"Bhattacharyya", "(", 
         RowBox[{"0", ",", "1", ",", "x", ",", "2"}], ")"}], 
       RowBox[{"Hellinger", "(", 
         RowBox[{"0", ",", "1", ",", "x", ",", "2"}], ")"}]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{
               TagBox[#, HoldForm], ",", 
               TagBox[#2, HoldForm], ",", 
               TagBox[#3, HoldForm]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}, {
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Below"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.623754004448512*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test specific values", "Section",
 CellChangeTimes->{{3.623755056981206*^9, 3.623755074733241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"KullbackLeibler", "[", 
  RowBox[{"0", ",", "1", ",", "1", ",", "2."}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Bhattacharyya", "[", 
  RowBox[{"0", ",", "1", ",", "1", ",", "2."}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Hellinger", "[", 
  RowBox[{"0", ",", "1", ",", "1", ",", "2."}], "]"}]}], "Input",
 CellChangeTimes->{
  3.623754031516596*^9, {3.62375503744445*^9, 3.623755052090184*^9}}],

Cell[BoxData["0.3465735902799727`"], "Output",
 CellChangeTimes->{
  3.623754032437942*^9, {3.6237550359499063`*^9, 3.623755052290596*^9}}],

Cell[BoxData["0.0502790922474292`"], "Output",
 CellChangeTimes->{
  3.623754032437942*^9, {3.6237550359499063`*^9, 3.6237550522941713`*^9}}],

Cell[BoxData["0.22144078037666476`"], "Output",
 CellChangeTimes->{
  3.623754032437942*^9, {3.6237550359499063`*^9, 3.623755052296842*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"pdf", "[", 
    RowBox[{"\[Mu]_", ",", "var_", ",", "x_"}], "]"}], ":=", 
   RowBox[{"PDF", "[", 
    RowBox[{
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", 
       RowBox[{"Sqrt", "[", "var", "]"}]}], "]"}], ",", "x"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.623754041889085*^9, 3.6237540855556726`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"overlap", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Min", "[", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"0", ",", "1", ",", "x"}], "]"}], ",", 
      RowBox[{"pdf", "[", 
       RowBox[{"1", ",", "2", ",", "x"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.623754255658499*^9, 3.623754271178985*^9}, {
  3.623754994589521*^9, 3.6237550190353127`*^9}}],

Cell[BoxData["0.6543599148380388`"], "Output",
 CellChangeTimes->{{3.623754260160017*^9, 3.623754271896789*^9}, {
  3.623754995751678*^9, 3.623755021809161*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"bc", "=", 
  RowBox[{"NIntegrate", "[", 
   RowBox[{
    RowBox[{"Sqrt", "[", 
     RowBox[{
      RowBox[{"pdf", "[", 
       RowBox[{"0", ",", "1", ",", "x"}], "]"}], "*", 
      RowBox[{"pdf", "[", 
       RowBox[{"1", ",", "2", ",", "x"}], "]"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", 
      RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"-", 
  RowBox[{"Log", "[", "bc", "]"}]}]}], "Input",
 CellChangeTimes->{{3.623754033832499*^9, 3.6237540377683372`*^9}, {
  3.623754087749291*^9, 3.6237541415745773`*^9}}],

Cell[BoxData["0.8933479858151188`"], "Output",
 CellChangeTimes->{{3.623754102065247*^9, 3.623754141823654*^9}, 
   3.6237542723624783`*^9, 3.6237550307460012`*^9}],

Cell[BoxData["0.11277909224800688`"], "Output",
 CellChangeTimes->{{3.623754102065247*^9, 3.623754141823654*^9}, 
   3.6237542723624783`*^9, 3.623755030748918*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Test Overlap", "Section",
 CellChangeTimes->{{3.623768608221127*^9, 3.6237686105609283`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Overlap", "[", 
    RowBox[{"0", ",", "x", ",", "1"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6237685803330936`*^9, 3.623768595763749*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 10}, {0., 0.9999999185832081}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.623768595974625*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Overlap", "[", 
     RowBox[{"0", ",", "x", ",", "1"}], "]"}], "\[Equal]", "0.5"}], ",", 
   "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.623768606120817*^9, 3.623768621323823*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"NSolve", "::", "ifun"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Inverse functions are being used by \[NoBreak]\\!\\(NSolve\
\\)\[NoBreak], so some solutions may not be found; use Reduce for complete \
solution information. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/NSolve\\\", ButtonNote -> \\\"NSolve::ifun\\\"]\\)\
\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.623768621591279*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "1.3489795003921636`"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "1.3489795003921636`"}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.623768621592359*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NIntegrate", "[", 
  RowBox[{
   RowBox[{"Min", "[", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1.349", ",", "1"}], "]"}], ",", "x"}], "]"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6237686291120996`*^9, 3.623768667596796*^9}}],

Cell[BoxData["0.4999934857273892`"], "Output",
 CellChangeTimes->{{3.623768640050596*^9, 3.6237686681238194`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"0", ",", "1"}], "]"}], ",", "x"}], "]"}], ",", 
     RowBox[{"PDF", "[", 
      RowBox[{
       RowBox[{"NormalDistribution", "[", 
        RowBox[{"1.349", ",", "1"}], "]"}], ",", "x"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6237686766041927`*^9, 3.623768690317018*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
/913Rv9/3/l/AJFaKJA=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
IOPl46cC1Qdx+P//8XH7wtjH93Jx+D+dSOA1
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-5, 5}, {0., 0.398942274292236}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.623768690627305*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{720, 852},
WindowMargins->{{Automatic, 0}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (June 27, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 358, 9, 28, "Input"],
Cell[919, 31, 819, 21, 46, "Input"],
Cell[1741, 54, 868, 24, 80, "Input"],
Cell[2612, 80, 440, 11, 46, "Input"],
Cell[3055, 93, 697, 20, 63, "Input"],
Cell[CellGroupData[{
Cell[3777, 117, 103, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[3905, 122, 437, 9, 63, "Input"],
Cell[4345, 133, 94, 1, 28, "Output"],
Cell[4442, 136, 94, 1, 28, "Output"],
Cell[4539, 139, 92, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4668, 145, 737, 17, 63, "Input"],
Cell[5408, 164, 153, 2, 28, "Output"],
Cell[5564, 168, 152, 2, 28, "Output"],
Cell[5719, 172, 143, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5911, 180, 97, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[6033, 185, 934, 22, 63, "Input"],
Cell[6970, 209, 30985, 579, 285, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38004, 794, 105, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[38134, 799, 428, 10, 63, "Input"],
Cell[38565, 811, 139, 2, 28, "Output"],
Cell[38707, 815, 141, 2, 28, "Output"],
Cell[38851, 819, 140, 2, 28, "Output"]
}, Open  ]],
Cell[39006, 824, 387, 11, 28, "Input"],
Cell[CellGroupData[{
Cell[39418, 839, 542, 15, 28, "Input"],
Cell[39963, 856, 161, 2, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40161, 863, 618, 17, 46, "Input"],
Cell[40782, 882, 164, 2, 28, "Output"],
Cell[40949, 886, 163, 2, 28, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[41161, 894, 99, 1, 64, "Section"],
Cell[CellGroupData[{
Cell[41285, 899, 278, 7, 28, "Input"],
Cell[41566, 908, 9556, 167, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51159, 1080, 257, 7, 28, "Input"],
Cell[51419, 1089, 522, 11, 42, "Message"],
Cell[51944, 1102, 284, 9, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52265, 1116, 595, 17, 46, "Input"],
Cell[52863, 1135, 114, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53014, 1141, 559, 16, 46, "Input"],
Cell[53576, 1159, 32255, 541, 243, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
